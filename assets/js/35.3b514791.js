(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{339:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"leakcanary教程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leakcanary教程","aria-hidden":"true"}},[t._v("#")]),t._v(" LeakCanary教程")]),t._v(" "),s("p",[t._v("LeakCanary是Square公司开源的一个检测内存泄漏的函数库，可以方便的在项目中集成，在Debug版本中监控Activity、Fragment等的内存泄漏。使用教程如下：")]),t._v(" "),s("h4",{attrs:{id:"leakcanary是square公司开源的一个检测内存泄漏的函数库，可以方便的在项目中集成，在debug版本中监控activity、fragment等的内存泄漏。使用教程如下："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leakcanary是square公司开源的一个检测内存泄漏的函数库，可以方便的在项目中集成，在debug版本中监控activity、fragment等的内存泄漏。使用教程如下：","aria-hidden":"true"}},[t._v("#")]),t._v(" LeakCanary是Square公司开源的一个检测内存泄漏的函数库，可以方便的在项目中集成，在Debug版本中监控Activity、Fragment等的内存泄漏。使用教程如下：")]),t._v(" "),s("ul",[s("li",[t._v("在你项目的gradle中添加以下依赖。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("dependencies "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   debugCompile "),s("span",{attrs:{class:"token string"}},[t._v("'com.squareup.leakcanary:leakcanary-android:1.5.1'")]),t._v("\n   releaseCompile "),s("span",{attrs:{class:"token string"}},[t._v("'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'")]),t._v("\n   testCompile "),s("span",{attrs:{class:"token string"}},[t._v("'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'")]),t._v("\n "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上述依赖中可以看到，只有在Debug版本中才使用LeakCanary的功能，而在Release和Test版本中，使用其no-op版本，此版本没有实际代码和操作，这样不会对生成的APK包体积和应用的性能造成影响。")]),t._v(" "),s("ul",[s("li",[t._v("在Application中获取RefWatcher实例，并用RefWatcher来检测想要监控的对象。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\t"),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" RefWatcher refWatcher"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("onCreate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("super")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("onCreate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LeakCanary"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("isInAnalyzerProcess")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        refWatcher "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LeakCanary"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("install")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" RefWatcher "),s("span",{attrs:{class:"token function"}},[t._v("getRefWatcher")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Context context"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        MyApplication application "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyApplication"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" context"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getApplicationContext")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" application"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refWatcher"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果只检测Activity的泄漏，只需要在Application中的onCreate()中使用LeakCanary.install(this);即可，此函数会启动一个ActivityRefWatcher，它会自动监控应用中调用Activity.onDestroy()之后发生泄漏的Activity。如果想监控其他对象例如Fragment，那就用RefWatcher的实例来实现。")]),t._v(" "),s("ul",[s("li",[t._v("使用RefWatcher来检测对象")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\tRefWatcher refWatcher "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyApplication"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getRefWatcher")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\trefWatcher"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("watch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("LeakCanary的Github地址：https://github.com/square/leakcanary")]),t._v(" "),s("li",[t._v("LeakCanary中文使用：https://www.liaohuqiu.net/cn/posts/leak-canary-read-me/")])])])}],!1,null,null,null);e.options.__file="android36.md";a.default=e.exports}}]);